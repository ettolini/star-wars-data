{"version":3,"sources":["Components/Header.js","Components/TextLoading.js","Components/TextInfo.js","Components/CharacterSelector.js","Components/App.js","index.js"],"names":["Header","class","TextLoading","props","text","src","alt","TextInfo","listComponents","map","item","index","CharacterSelector","optionComponents","characters","character","value","name","onChange","handleChange","Array","isArray","App","state","url","movies","getPeople","bind","getFilms","this","setState","fetch","then","response","json","data","people","results","films","error","console","log","event","target","featuredMovies","displayText","height","mass","hair_color","skin_color","eye_color","birth_year","gender","featured","i","length","toString","push","title","Component","ReactDOM","render","document","getElementById"],"mappings":"wMAUeA,MARf,WACE,OACE,qBAAKC,MAAM,SAAX,SACE,6DCSSC,MAZf,SAAqBC,GACnB,MACiB,eAAfA,EAAMC,MACJ,qBACEC,IAAI,yEACJC,IAAI,sBACJL,MAAM,gBCECM,MARf,SAAkBJ,GAChB,IAAMK,EAAiBL,EAAMC,KAAKK,KAAI,SAACC,EAAMC,GAAP,OACpC,6BAAiBD,GAARC,MAGX,OAAO,6BAAKH,KCoBCI,MAtBf,SAA2BT,GACzB,IAAMU,EAAmBV,EAAMO,KAAKI,WAAWL,KAAI,SAACM,EAAWJ,GAAZ,OACjD,wBAAoBK,MAAOL,EAA3B,SACGI,EAAUE,MADAN,MAKf,OACE,gCACE,yBAAQO,SAAUf,EAAMgB,aAAxB,UACE,wBAAQH,MAAM,GAAd,sCACCH,KAEDO,MAAMC,QAAQlB,EAAMO,KAAKN,MAGzB,cAAC,EAAD,CAAUA,KAAMD,EAAMO,KAAKN,OAF3B,cAAC,EAAD,CAAaA,KAAMD,EAAMO,KAAKN,WC+EvBkB,E,kDA5Fb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,IAAK,GACLV,WAAY,GACZW,OAAQ,GACRrB,KAAM,IAER,EAAKsB,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKR,aAAe,EAAKA,aAAaQ,KAAlB,gBAVR,E,qDAad,WAAqB,IAAD,OAClBE,KAAKC,SAAS,CAAE1B,KAAM,eAEtB2B,MAAM,0BACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKL,SAAS,CAAEN,IAAKW,IACrB,EAAKT,UAAU,EAAKH,MAAMC,IAAIY,a,uBAIpC,SAAUZ,GAAM,IAAD,OACb,IACEO,MAAMP,GACHQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKL,SAAS,CAAEhB,WAAYqB,EAAKE,UACjC,EAAKT,SAAS,EAAKL,MAAMC,IAAIc,UAEjC,MAAOC,GACPC,QAAQC,IACN,2E,sBAKN,SAASjB,GAAM,IAAD,OACZ,IACEO,MAAMP,GACHQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKL,SAAS,CACZL,OAAQU,EAAKE,QACbjC,KAAM,QAGZ,MAAOmC,GACPC,QAAQC,IAAI,iE,0BAIhB,SAAaC,GACX,IAAK,IAAD,EACMjB,EAAWI,KAAKN,MAAhBE,OACFV,EAAYc,KAAKN,MAAMT,WAAW4B,EAAMC,OAAO3B,OAC/C4B,EAAiB7B,EAAUuB,MAE3BO,EAAc,CAClB,WAAa9B,EAAU+B,OACvB,SAAW/B,EAAUgC,KACrB,eAAiBhC,EAAUiC,WAC3B,eAAiBjC,EAAUkC,WAC3B,cAAgBlC,EAAUmC,UAC1B,eAAiBnC,EAAUoC,WAC3B,WAAapC,EAAUqC,OACvB,qBAbA,cAgBmBR,GAhBnB,IAgBF,2BACE,IADF,IAASS,EAAT,QACWC,EAAI,EAAGA,GAAK7B,EAAO8B,OAAQD,IAC9BD,EAASA,EAASE,OAAS,KAAOD,EAAEE,YACtCX,EAAYY,KAAK,IAAMhC,EAAO6B,EAAI,GAAGI,MAAQ,KAnBjD,8BAqBF7B,KAAKC,SAAS,CAAE1B,KAAMyC,IACtB,MAAON,GACPV,KAAKC,SAAS,CAAE1B,KAAM,Q,oBAI1B,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAmBe,aAAcU,KAAKV,aAAcT,KAAMmB,KAAKN,e,GAvFrDoC,aCDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6dd185b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div class=\"header\">\r\n      <h1>Star Wars Character Data</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction TextLoading(props) {\r\n  return (\r\n    props.text === \"LOADING...\" && (\r\n      <img\r\n        src=\"https://thumbs.gfycat.com/InnocentPleasedAmericangoldfinch-max-1mb.gif\"\r\n        alt=\"this slowpoke moves\"\r\n        class=\"loadingGif\"\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nexport default TextLoading;\r\n","import React from \"react\";\r\n\r\nfunction TextInfo(props) {\r\n  const listComponents = props.text.map((item, index) => (\r\n    <li key={index}>{item}</li>\r\n  ));\r\n\r\n  return <ul>{listComponents}</ul>;\r\n}\r\n\r\nexport default TextInfo;\r\n","import React from \"react\";\r\n\r\nimport TextLoading from \"./TextLoading\";\r\nimport TextInfo from \"./TextInfo\";\r\n\r\nfunction CharacterSelector(props) {\r\n  const optionComponents = props.item.characters.map((character, index) => (\r\n    <option key={index} value={index}>\r\n      {character.name}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <select onChange={props.handleChange}>\r\n        <option value=\"\">-- Choose a character --</option>\r\n        {optionComponents}\r\n      </select>\r\n      {!Array.isArray(props.item.text) ? (\r\n        <TextLoading text={props.item.text} />\r\n      ) : (\r\n        <TextInfo text={props.item.text} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterSelector;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport CharacterSelector from \"./CharacterSelector\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      url: {},\r\n      characters: [],\r\n      movies: [],\r\n      text: \"\",\r\n    };\r\n    this.getPeople = this.getPeople.bind(this);\r\n    this.getFilms = this.getFilms.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ text: \"LOADING...\" });\r\n\r\n    fetch(\"https://swapi.dev/api/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ url: data });\r\n        this.getPeople(this.state.url.people);\r\n      });\r\n  }\r\n\r\n  getPeople(url) {\r\n    try {\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({ characters: data.results });\r\n          this.getFilms(this.state.url.films);\r\n        });\r\n    } catch (error) {\r\n      console.log(\r\n        \"An unexpected error has occurred when fetching character basic data.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  getFilms(url) {\r\n    try {\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            movies: data.results,\r\n            text: \"\",\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.log(\"An unexpected error has occurred when fetching movie data.\");\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    try {\r\n      const { movies } = this.state;\r\n      const character = this.state.characters[event.target.value];\r\n      const featuredMovies = character.films;\r\n\r\n      const displayText = [\r\n        \"Height: \" + character.height,\r\n        \"Mass: \" + character.mass,\r\n        \"Hair color: \" + character.hair_color,\r\n        \"Skin color: \" + character.skin_color,\r\n        \"Eye color: \" + character.eye_color,\r\n        \"Birth year: \" + character.birth_year,\r\n        \"Gender: \" + character.gender,\r\n        \"Featured movies: \",\r\n      ];\r\n\r\n      for (let featured of featuredMovies)\r\n        for (let i = 1; i <= movies.length; i++)\r\n          if (featured[featured.length - 2] === i.toString())\r\n            displayText.push('\"' + movies[i - 1].title + '\"');\r\n\r\n      this.setState({ text: displayText });\r\n    } catch (error) {\r\n      this.setState({ text: \"\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <CharacterSelector handleChange={this.handleChange} item={this.state} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}